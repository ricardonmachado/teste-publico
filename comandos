/usr/share/applications/kde4

 - git config --global user.name "Ricardo Machado" #define nome do usuário
 - git config --global user.email "ricardonmachado@gmail.com" #define email do usuário

 - git config --list # mostra configurações do usuário

 - git config --global --add merge.tool kdiff3 # adiciona a ferramenta gráfica kdiff3
 - git config --global --add mergetool.kdiff.path "/usr/share/applications/kde4/KDiff3"
 - git config --global --add mergetool.kdiff.trustExitCode false


 - git init # cria um repositório novo
 - git status # mostra o estado dos arquivos do repositório
 
 - git add nome_do_arquivo # adiciona o arquivo para ser comitado
 - git add --all  == git add . == git add -A
 - git commit -m "mensagem" # a mensagem deve ser útil para lembrar das modific. salvas
 
 - git diff # diz as diferenças que ocorreram no repositório
 - git diff --cached
 - git diff --staged

 - git log # dá a listagem de todos os commits feitos no projeto
 - git log --oneline

 - git checkout "codigo" # muda para outro momento de commit
 - git checkout master  # muda para a commit HEAD
 - git checkout nome_do_arquivo #volta o arquivo para o commit 

 - git reset --hard # volta todos os arquivos da commit

 - git clean -f # remove arquivos que chegaram depois da commit

 - mv file1 file2 # renomeia um arquivo pelo terminal 

 - git clone pasta1/ pasta2

 - git push # envia arquivos commitados para o github
 - git push -u origin nome_da_branch # envia o commit da branch 
 - git push --delete origin TASK-2 # deleta branch do servidor
 - git push origin v1.0 # v1.0 é o nome da tag

 - git pull # baixa os arquivos mais novos do github

 - git branch              # lista as branchs 
 - git branch um_nome      # cria a branch um_nome
 - git branch -d nome_da_branch  # deleta a branch
 - git branch -m TASK-3-UPDATE   # muda o nome da branch atual
 - git branch -m TASK-3-UPDATE TASK-3  # muda o nome da branch estando em outra branch

 - git checkout um_nome    # muda para a branch um-nome
 - git checkout -b TASK-1  # cria e muda para a branck TASK-1

 - git merge nome_da_branch  # merge os arquivos da nome_da_branch para a branch que estou

 - git tag -a nome_da_tag -m "texto"   # cria uma tag com a o commit que vc estiver
 - git tag -d nome_da_tag    # remove a tag
 - git push --delete origin nome_da_tag # deleta a tag
 - 

 - git stash                  # salva 
 - git stash lista            # mostra uma lista com todos os stash
 - git stash save "mensagem"  # salva a stash e guarda a mensagem
 - git stash apply            # pega o primeiro stash da lista a aplica
 - git stash pop              # aplica o primeiro stash da lista e apaga da lista
 - git stash pop  stash@{x}   # aplica o stash x e apaga da lista
 - git stash drop stash@{x}   # dropa o stash x (remove)

 - git reset --hard HEAD~1    # deleta o último commit e volta um

 - git commit --amend    # add coisas na última commit. não cria commit nova


